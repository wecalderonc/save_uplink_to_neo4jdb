# This file is auto-generated from the current state of the database. Instead
# of editing this file, please use the migrations feature of ActiveNode to
# incrementally modify your database, and then regenerate this schema definition.
#
# Note that this schema.yml definition is the authoritative source for your
# database schema. If you need to create the application database on another
# system, you should be using neo4j:schema:load, not running all the migrations
# from scratch. The latter is a flawed and unsustainable approach (the more migrations
# you'll amass, the slower it'll run and the greater likelihood for issues).
#
# It's strongly recommended that you check this file into your version control system.

---
:constraints:
- CONSTRAINT ON ( `neo4j::migrations::schemamigration`:`Neo4j::Migrations::SchemaMigration`
  ) ASSERT `neo4j::migrations::schemamigration`.migration_id IS UNIQUE
- CONSTRAINT ON ( accumulator:Accumulator ) ASSERT accumulator.uuid IS UNIQUE
- CONSTRAINT ON ( alarm:Alarm ) ASSERT alarm.uuid IS UNIQUE
- CONSTRAINT ON ( batterylevel:BatteryLevel ) ASSERT batterylevel.uuid IS UNIQUE
- CONSTRAINT ON ( sensor1:Sensor1 ) ASSERT sensor1.uuid IS UNIQUE
- CONSTRAINT ON ( sensor2:Sensor2 ) ASSERT sensor2.uuid IS UNIQUE
- CONSTRAINT ON ( sensor3:Sensor3 ) ASSERT sensor3.uuid IS UNIQUE
- CONSTRAINT ON ( sensor4:Sensor4 ) ASSERT sensor4.uuid IS UNIQUE
- CONSTRAINT ON ( thing:Thing ) ASSERT thing.uuid IS UNIQUE
- CONSTRAINT ON ( timeuplink:TimeUplink ) ASSERT timeuplink.uuid IS UNIQUE
- CONSTRAINT ON ( uplink:Uplink ) ASSERT uplink.uuid IS UNIQUE
- CONSTRAINT ON ( uplinkbdownlink:UplinkBDownlink ) ASSERT uplinkbdownlink.uuid IS
  UNIQUE
- CONSTRAINT ON ( user:User ) ASSERT user.uuid IS UNIQUE
- CONSTRAINT ON ( valveposition:ValvePosition ) ASSERT valveposition.uuid IS UNIQUE
:indexes:
- INDEX ON :Category(categoryID)
- INDEX ON :Product(productID)
- INDEX ON :Supplier(supplierID)
:versions:
- '20190531034538'
- '20190531034612'
- '20190531034614'
- '20190531034615'
- '20190531034617'
- '20190531034619'
- '20190531034620'
- '20190531034622'
- '20190531034624'
- '20190531034625'
- '20190531034627'
- '20190531034629'
- '20190531034631'
- '20190531232326'
- '20190531232327'
- '20190531232328'
- '20190531232329'
- '20190531232330'
- '20190531232331'
- '20190531232332'
- '20190531232333'
- '20190531232335'
- '20190531232336'
- '20190531232337'
- '20190531232338'
- '20190601013534'
- '20190601013535'
- '20190601013536'
- '20190601013537'
- '20190601013538'
- '20190601013540'
- '20190601013541'
- '20190601013542'
- '20190601013543'
- '20190601013544'
- '20190601013545'
- '20190601013546'
- '20190601014652'
- '20190601014653'
- '20190601014654'
- '20190601014655'
- '20190601014656'
- '20190601014657'
- '20190601014658'
- '20190601014659'
- '20190601014700'
- '20190601014701'
- '20190601014702'
- '20190601014703'
- '20190601014927'
- '20190601014928'
- '20190601014929'
- '20190601014930'
- '20190601014931'
- '20190601014932'
- '20190601014933'
- '20190601014934'
- '20190601014935'
- '20190601014936'
- '20190601014937'
- '20190601014938'
